name: dev-deployment

on: push

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_IAM_ROLE: arn:aws:iam::237110372189:role/GitHubAction-AssumeRoleWithAction
  TF_STATE_S3_BUCKET: poc-tf-state-files
  TF_STATE_S3_KEY: poc-ecs/ecs-service.tfstate
  DOCKER_REGISTRY_ALIAS: t6y6o8s3
  DOCKER_REPOSITORY: sample-app

jobs:
  set-env:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Setting env variables"
    outputs:
      aws_role: ${{ env.AWS_IAM_ROLE }}
      aws_region: ${{ env.AWS_REGION }}
      repository: ${{ env.DOCKER_REPOSITORY }}
      registry_alias: ${{ env.DOCKER_REGISTRY_ALIAS }}

  build:
    needs: set-env
    uses: ./.github/workflows/build-workflow.yml
    with:
      aws_role: ${{ needs.set-env.outputs.aws_role }}
      aws_region: ${{ needs.set-env.outputs.aws_region }}
      repository: ${{ needs.set-env.outputs.repository }}
      registry_alias: ${{ needs.set-env.outputs.registry_alias }}

  deploy:
    needs:
      - set-env
      - build
    runs-on: ubuntu-latest
    env:
      TF_VAR_task_image: public.ecr.aws/${{ needs.set-env.outputs.registry_alias }}/${{ needs.set-env.outputs.repository }}:${{ github.sha }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_IAM_ROLE }}
          role-session-name: assumerolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Terraform plan
        uses: iulian-balan/poc-github-worflows/terraform/terraform-plan@main
        with:
          aws-region: ${{ env.AWS_REGION }}
          s3-bucket: ${{ env.TF_STATE_S3_BUCKET }}
          s3-key: ${{ env.TF_STATE_S3_KEY }}
          working-dir: ./terraform/ecs-service
          var-file: poc-env.tfvars

      - name: Terraform apply
        uses: iulian-balan/poc-github-worflows/terraform/terraform-apply@main
        with:
          aws-region: ${{ env.AWS_REGION }}
          s3-bucket: ${{ env.TF_STATE_S3_BUCKET }}
          s3-key: ${{ env.TF_STATE_S3_KEY }}
          working-dir: ./terraform/ecs-service
          var-file: poc-env.tfvars